"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const util_1 = require("util");
// @ts-ignore
const package_json_1 = require("../package.json");
const args_1 = require("./args");
const service_1 = require("./service");
const readFile = (0, util_1.promisify)(fs_1.default.readFile);
const validCommands = ["restart", "start", "status", "stop"];
function processArgs(args) {
    const flagsToAction = {
        "--version": "PRINT_VERSION",
        "--help": "PRINT_HELP",
        "flush-cache": "FLUSH_CACHE",
        "--debug-info": "PRINT_DEBUG_INFO",
    };
    for (const arg of args) {
        const action = flagsToAction[arg];
        if (action) {
            return [action, ""];
        }
    }
    return ["INVOKE_CORE_D", args[0]];
}
function printDebugInfo(debugInfo) {
    if (debugInfo.resolvedPrettier) {
        console.log(`prettier version: ${debugInfo.resolvedPrettier.module.version}
  Loaded from: ${debugInfo.resolvedPrettier.filePath}
  Cache: ${debugInfo.resolvedPrettier.cacheHit ? "hit" : "miss"}\n`);
    }
    console.log("Cache information:");
    debugInfo.cacheInfo.forEach((cacheInfo) => {
        console.log(`- "${cacheInfo.name}" contains ${cacheInfo.length} items`);
    });
}
async function main(args) {
    const [action, cmdOrFilename] = processArgs(args);
    switch (action) {
        case "PRINT_VERSION":
            console.log(`prettierd ${package_json_1.version}\n`);
            return;
        case "PRINT_HELP":
            (0, args_1.displayHelp)();
            return;
        case "PRINT_DEBUG_INFO":
            console.log(`prettierd ${package_json_1.version}`);
            const debugInfo = await (0, service_1.getDebugInfo)(process.cwd(), args.slice(1));
            printDebugInfo(debugInfo);
            return;
        case "FLUSH_CACHE":
            (0, service_1.flushCache)();
            console.log("success");
            return;
    }
    const title = "prettierd";
    process.env.CORE_D_TITLE = title;
    process.env.CORE_D_SERVICE = require.resolve("./service");
    process.env.CORE_D_DOTFILE = `.${title}`;
    const core_d = require("core_d");
    if (validCommands.includes(cmdOrFilename)) {
        core_d[cmdOrFilename]();
        return;
    }
    core_d.invoke(args, await readFile(process.stdin.fd, { encoding: "utf-8" }));
}
main(process.argv.slice(2)).catch((err) => {
    console.error(err);
    process.exit(1);
});
